#!/bin/bash

VENV_HOME=".venv"
PYTHON_HOME="$VENV_HOME/bin"
PYTHON_RECOMMENDED_VERSION="3.10.6"
MODELS_HOME="$(dirname "$0")/models"
LOGGING_PREFIX="\033[90m[\033[33mCoolCLK\033[90m/\033[36mturn-live-photos\033[90m] \033[0m"

end() {
    echo -e "${LOGGING_PREFIX}关闭脚本中"
    exit 0
}

check_python() {
    if ! command -v python &> /dev/null; then
        echo -e "${LOGGING_PREFIX}未检测到 Python 环境"
        exit
    fi

    PYTHON_VERSION=$(python --version 2>&1 | awk '{print $2}')
    if [[ "$PYTHON_VERSION" != "3.10.6" ]]; then
        echo -e "${LOGGING_PREFIX}警告：检测到不支持的 Python 版本 $PYTHON_VERSION"
        echo -e "${LOGGING_PREFIX}我们推荐使用 Python ${PYTHON_RECOMMENDED_VERSION}"
        echo -e "${LOGGING_PREFIX}详见 https://www.python.org/downloads/release/python-3106/"
    fi
}

activate_venv() {
    if [[ ! -d "$VENV_HOME" ]]; then
        echo -e "${LOGGING_PREFIX}正在创建虚拟环境中"
        python -m venv "$VENV_HOME"
        echo -e "${LOGGING_PREFIX}在 $VENV_HOME 目录创建了虚拟环境"
    fi

    echo -e "${LOGGING_PREFIX}激活虚拟环境中..."
    source "$VENV_HOME/Scripts/activate"
}

install_dependencies() {
    read -p "${LOGGING_PREFIX}是否检查依赖 (Y/n) " DO_CHECK
    if [[ "$DO_CHECK" =~ ^[Yy]$ ]] || [[ -z "$DO_CHECK" ]]; then
        echo -e "${LOGGING_PREFIX}从 requirements.txt 处理依赖中[31m"
        echo -e "[31m"
        pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple > /dev/null 2>&1
        pip install torch==2.7.0+cu128 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128 > /dev/null 2>&1
        pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple > /dev/null 2>&1
        echo -e "[0m"
    fi
}

pretrained_model_downloading() {
    read -p "${LOGGING_PREFIX}是否提前下载/更新模型 (Y/n) " DO_DOWNLOAD
    if [[ "$DO_DOWNLOAD" =~ ^[Yy]$ ]] || [[ -z "$DO_DOWNLOAD" ]]; then
        if ! command -v git &> /dev/null; then
            echo -e "${LOGGING_PREFIX}检测到未安装 Git（https://git-scm.com/），正在跳过..."
            return
        fi

        MODEL_URL="https://huggingface.co/stabilityai/stable-video-diffusion-img2vid-xt"
        read -p "${LOGGING_PREFIX}是否使用 hf-mirror.com 镜像 (Y/n) " USE_MIRROR
        if [[ "$USE_MIRROR" =~ ^[Yy]$ ]]; then
            MODEL_URL="https://hf-mirror.com/stabilityai/stable-video-diffusion-img2vid-xt"
        fi

        echo -e "${LOGGING_PREFIX}我们默认你已安装 Git LFS（https://git-lfs.com/）"
        git lfs install --force > /dev/null 2>&1

        MODEL_DIR="${MODELS_HOME}stabilityai/stable-video-diffusion-img2vid-xt"
        if [[ -d "$MODEL_DIR" ]]; then
            echo -e "${LOGGING_PREFIX}开始拉取 stabilityai/stable-video-diffusion-img2vid-xt ..."
            git -C "$MODEL_DIR" pull > /dev/null 2>&1
        else
            echo -e "${LOGGING_PREFIX}开始克隆 stabilityai/stable-video-diffusion-img2vid-xt ..."
            git clone "$MODEL_URL" "$MODEL_DIR" > /dev/null 2>&1
        fi
}

run_script() {
    echo -e "${LOGGING_PREFIX}以 $(cat run_args.txt) 的参数启动 Python 脚本"
    python app.py $(cat run_args.txt)
    echo -e "${LOGGING_PREFIX}Python 脚本已停止"
}

deactivate_venv() {
    echo -e "${LOGGING_PREFIX}停用虚拟环境中"
    source "$VENV_HOME/Scripts/deactivate"
}

check_python
activate_venv
install_dependencies
pretrained_model_downloading
run_script
deactivate_venv
exit